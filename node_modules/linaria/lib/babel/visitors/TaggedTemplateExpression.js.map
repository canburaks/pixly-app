{"version":3,"sources":["../../../src/babel/visitors/TaggedTemplateExpression.js"],"names":["unitRegex","RegExp","units","join","TaggedTemplateExpression","path","state","t","options","node","quasi","tag","styled","css","isCallExpression","isIdentifier","callee","arguments","length","name","scope","file","opts","filename","component","get","isMemberExpression","object","property","stringLiteral","index","interpolations","isReferenced","displayName","parent","findParent","p","isObjectProperty","isJSXOpeningElement","isVariableDeclarator","key","value","getBinding","id","referencePaths","test","replace","buildCodeFrameError","slug","charAt","toLowerCase","root","className","cssText","expressions","quasis","forEach","el","i","self","appended","matches","cooked","match","last","unit","endsWith","ex","end","loc","result","evaluate","beforeLength","next","start","line","column","confident","replacements","push","original","isFunctionExpression","isArrowFunctionExpression","evaluation","undefined","e","message","dependencies","__linaria","source","getSource","code","selector","extends","props","objectProperty","identifier","it","objectExpression","Object","keys","map","items","arrayExpression","replaceWith","callExpression","addComment","includes","rules"],"mappings":"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","sourcesContent":["/* @flow */\n/* eslint-disable no-param-reassign */\n\nimport { relative, dirname, basename } from 'path';\nimport { isValidElementType } from 'react-is';\nimport generator from '@babel/generator';\nimport evaluate from '../evaluate';\nimport slugify from '../../slugify';\nimport { units } from '../units';\nimport throwIfInvalid from '../utils/throwIfInvalid';\nimport isSerializable from '../utils/isSerializable';\nimport stripLines from '../utils/stripLines';\nimport toValidCSSIdentifier from '../utils/toValidCSSIdentifier';\nimport toCSS from '../utils/toCSS';\nimport hasImport from '../utils/hasImport';\nimport type { StrictOptions, State } from '../types';\n\n// Match any valid CSS units followed by a separator such as ;, newline etc.\nconst unitRegex = new RegExp(`^(${units.join('|')})(;|,|\\n| |\\\\))`);\n\nexport default function TaggedTemplateExpression(\n  path: any,\n  state: State,\n  t: any,\n  options: StrictOptions\n) {\n  const { quasi, tag } = path.node;\n\n  let styled;\n  let css;\n\n  if (\n    t.isCallExpression(tag) &&\n    t.isIdentifier(tag.callee) &&\n    tag.arguments.length === 1 &&\n    tag.callee.name === 'styled' &&\n    hasImport(\n      t,\n      path.scope,\n      state.file.opts.filename,\n      'styled',\n      'linaria/react'\n    )\n  ) {\n    styled = { component: path.get('tag').get('arguments')[0] };\n  } else if (\n    t.isMemberExpression(tag) &&\n    t.isIdentifier(tag.object) &&\n    t.isIdentifier(tag.property) &&\n    tag.object.name === 'styled' &&\n    hasImport(\n      t,\n      path.scope,\n      state.file.opts.filename,\n      'styled',\n      'linaria/react'\n    )\n  ) {\n    styled = {\n      component: { node: t.stringLiteral(tag.property.name) },\n    };\n  } else if (\n    hasImport(t, path.scope, state.file.opts.filename, 'css', 'linaria')\n  ) {\n    css = t.isIdentifier(tag) && tag.name === 'css';\n  }\n\n  if (!(styled || css)) {\n    return;\n  }\n\n  // Increment the index of the style we're processing\n  // This is used for slug generation to prevent collision\n  // Also used for display name if it couldn't be determined\n  state.index++;\n\n  const interpolations = [];\n\n  // Check if the variable is referenced anywhere for basic DCE\n  // Only works when it's assigned to a variable\n  let isReferenced = true;\n\n  // Try to determine a readable class name\n  let displayName;\n\n  const parent = path.findParent(\n    p =>\n      t.isObjectProperty(p) ||\n      t.isJSXOpeningElement(p) ||\n      t.isVariableDeclarator(p)\n  );\n\n  if (parent) {\n    if (t.isObjectProperty(parent)) {\n      displayName = parent.node.key.name || parent.node.key.value;\n    } else if (t.isJSXOpeningElement(parent)) {\n      displayName = parent.node.name.name;\n    } else if (t.isVariableDeclarator(parent)) {\n      const { referencePaths } = path.scope.getBinding(parent.node.id.name);\n\n      isReferenced = referencePaths.length !== 0;\n      displayName = parent.node.id.name;\n    }\n  }\n\n  if (!displayName) {\n    // Try to derive the path from the filename\n    displayName = basename(state.file.opts.filename);\n\n    if (/^index\\.[a-z0-9]+$/.test(displayName)) {\n      // If the file name is 'index', better to get name from parent folder\n      displayName = basename(dirname(state.file.opts.filename));\n    }\n\n    // Remove the file extension\n    displayName = displayName.replace(/\\.[a-z0-9]+$/, '');\n\n    if (displayName) {\n      displayName += state.index;\n    } else {\n      throw path.buildCodeFrameError(\n        \"Couldn't determine a name for the component. Ensure that it's either:\\n\" +\n          '- Assigned to a variable\\n' +\n          '- Is an object property\\n' +\n          '- Is a prop in a JSX element\\n'\n      );\n    }\n  }\n\n  // Custom properties need to start with a letter, so we prefix the slug\n  // Also use append the index of the class to the filename for uniqueness in the file\n  const slug = toValidCSSIdentifier(\n    `${displayName.charAt(0).toLowerCase()}${slugify(\n      `${relative(state.file.opts.root, state.file.opts.filename)}:${\n        state.index\n      }`\n    )}`\n  );\n\n  const className = options.displayName\n    ? `${toValidCSSIdentifier(displayName)}_${slug}`\n    : slug;\n\n  // Serialize the tagged template literal to a string\n  let cssText = '';\n\n  const expressions = path.get('quasi').get('expressions');\n\n  quasi.quasis.forEach((el, i, self) => {\n    let appended = false;\n\n    if (i !== 0) {\n      // Check if previous expression was a CSS variable that we replaced\n      // If it has a unit after it, we need to move the unit into the interpolation\n      // e.g. `var(--size)px` should actually be `var(--size)`\n      // So we check if the current text starts with a unit, and add the unit to the previous interpolation\n      // Another approach would be `calc(var(--size) * 1px), but some browsers don't support all units\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=956573\n      const matches = el.value.cooked.match(unitRegex);\n\n      if (matches) {\n        const last = interpolations[interpolations.length - 1];\n        const [, unit] = matches;\n\n        if (last && cssText.endsWith(`var(--${last.id})`)) {\n          last.unit = unit;\n          cssText += el.value.cooked.replace(unitRegex, '$2');\n          appended = true;\n        }\n      }\n    }\n\n    if (!appended) {\n      cssText += el.value.cooked;\n    }\n\n    const ex = expressions[i];\n\n    if (ex) {\n      const { end } = ex.node.loc;\n      const result = ex.evaluate();\n      const beforeLength = cssText.length;\n\n      // The location will be end of the current string to start of next string\n      const next = self[i + 1];\n      const loc = {\n        // +1 because the expressions location always shows 1 column before\n        start: { line: el.loc.end.line, column: el.loc.end.column + 1 },\n        end: next\n          ? { line: next.loc.start.line, column: next.loc.start.column }\n          : { line: end.line, column: end.column + 1 },\n      };\n\n      if (result.confident) {\n        throwIfInvalid(result.value, ex);\n\n        if (isSerializable(result.value)) {\n          // If it's a plain object, convert it to a CSS string\n          cssText += stripLines(loc, toCSS(result.value));\n        } else {\n          cssText += stripLines(loc, result.value);\n        }\n\n        state.replacements.push({\n          original: loc,\n          length: cssText.length - beforeLength,\n        });\n      } else {\n        // Try to preval the value\n        if (\n          options.evaluate &&\n          !(t.isFunctionExpression(ex) || t.isArrowFunctionExpression(ex))\n        ) {\n          let evaluation;\n\n          try {\n            evaluation = evaluate(\n              ex,\n              t,\n              state.file.opts.filename,\n              undefined,\n              options\n            );\n          } catch (e) {\n            throw ex.buildCodeFrameError(\n              `An error occurred when evaluating the expression: ${\n                e.message\n              }. Make sure you are not using a browser or Node specific API.`\n            );\n          }\n\n          const { value, dependencies } = evaluation;\n\n          throwIfInvalid(value, ex);\n\n          if (typeof value !== 'function') {\n            // Only insert text for non functions\n            // We don't touch functions because they'll be interpolated at runtime\n\n            if (isValidElementType(value) && value.__linaria) {\n              // If it's an React component wrapped in styled, get the class name\n              // Useful for interpolating components\n              cssText += `.${value.__linaria.className}`;\n            } else if (isSerializable(value)) {\n              cssText += stripLines(loc, toCSS(value));\n            } else {\n              // For anything else, assume it'll be stringified\n              cssText += stripLines(loc, value);\n            }\n\n            state.dependencies.push(...dependencies);\n            state.replacements.push({\n              original: loc,\n              length: cssText.length - beforeLength,\n            });\n\n            return;\n          }\n        }\n\n        if (styled) {\n          const id = `${slug}-${i}`;\n\n          interpolations.push({\n            id,\n            node: ex.node,\n            source: ex.getSource() || generator(ex.node).code,\n            unit: '',\n          });\n\n          cssText += `var(--${id})`;\n        } else {\n          // CSS custom properties can't be used outside components\n          throw ex.buildCodeFrameError(\n            `The CSS cannot contain JavaScript expressions when using the 'css' tag. To evaluate the expressions at build time, pass 'evaluate: true' to the babel plugin.`\n          );\n        }\n      }\n    }\n  });\n\n  let selector = `.${className}`;\n\n  if (styled) {\n    // If `styled` wraps another component and not a primitive,\n    // get its class name to create a more specific selector\n    // it'll ensure that styles are overridden properly\n    if (options.evaluate && t.isIdentifier(styled.component.node)) {\n      let { value } = evaluate(\n        styled.component,\n        t,\n        state.file.opts.filename,\n        undefined,\n        options\n      );\n\n      while (isValidElementType(value) && value.__linaria) {\n        selector += `.${value.__linaria.className}`;\n        value = value.__linaria.extends;\n      }\n    }\n\n    const props = [];\n\n    props.push(\n      t.objectProperty(t.identifier('name'), t.stringLiteral(displayName))\n    );\n\n    props.push(\n      t.objectProperty(t.identifier('class'), t.stringLiteral(className))\n    );\n\n    // If we found any interpolations, also pass them so they can be applied\n    if (interpolations.length) {\n      // De-duplicate interpolations based on the source and unit\n      // If two interpolations have the same source code and same unit,\n      // we don't need to use 2 custom properties for them, we can use a single one\n      const result = {};\n\n      interpolations.forEach(it => {\n        const key = it.source + it.unit;\n\n        if (key in result) {\n          cssText = cssText.replace(\n            `var(--${it.id})`,\n            `var(--${result[key].id})`\n          );\n        } else {\n          result[key] = it;\n        }\n      });\n\n      props.push(\n        t.objectProperty(\n          t.identifier('vars'),\n          t.objectExpression(\n            Object.keys(result).map(key => {\n              const { id, node, unit } = result[key];\n              const items = [node];\n\n              if (unit) {\n                items.push(t.stringLiteral(unit));\n              }\n\n              return t.objectProperty(\n                t.stringLiteral(id),\n                t.arrayExpression(items)\n              );\n            })\n          )\n        )\n      );\n    }\n\n    path.replaceWith(\n      t.callExpression(\n        t.callExpression(t.identifier('styled'), [styled.component.node]),\n        [t.objectExpression(props)]\n      )\n    );\n\n    path.addComment('leading', '#__PURE__');\n  } else {\n    path.replaceWith(t.stringLiteral(className));\n  }\n\n  if (!isReferenced && !cssText.includes(':global')) {\n    return;\n  }\n\n  state.rules[selector] = {\n    cssText,\n    className,\n    displayName,\n    start: path.parent && path.parent.loc ? path.parent.loc.start : null,\n  };\n}\n"],"file":"TaggedTemplateExpression.js"}