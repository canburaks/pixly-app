{"version":3,"sources":["../../src/babel/extract.js"],"names":["module","exports","extract","babel","options","t","types","visitor","Program","enter","path","state","rules","index","dependencies","replacements","Module","invalidate","traverse","TaggedTemplateExpression","p","exit","Object","keys","length","file","metadata","linaria"],"mappings":";;AAGA;;AACA;;;;AAJA;AAOAA,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,KAAjB,EAA6BC,OAA7B,EAAqD;AAAA,MACrDC,CADqD,GAC/CF,KAD+C,CAC5DG,KAD4D;AAGpE,SAAO;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KADO,iBACDC,IADC,EACUC,KADV,EACwB;AAC7B;AACAA,UAAAA,KAAK,CAACC,KAAN,GAAc,EAAd;AACAD,UAAAA,KAAK,CAACE,KAAN,GAAc,CAAC,CAAf;AACAF,UAAAA,KAAK,CAACG,YAAN,GAAqB,EAArB;AACAH,UAAAA,KAAK,CAACI,YAAN,GAAqB,EAArB,CAL6B,CAO7B;;AACAC,0BAAOC,UAAP,GAR6B,CAU7B;AACA;;;AACAP,UAAAA,IAAI,CAACQ,QAAL,CAAc;AACZC,YAAAA,wBAAwB,EAAE,kCAAAC,CAAC;AAAA,qBACzB,wCAAyBA,CAAzB,EAA4BT,KAA5B,EAAmCN,CAAnC,EAAsCD,OAAtC,CADyB;AAAA;AADf,WAAd;AAID,SAjBM;AAkBPiB,QAAAA,IAlBO,gBAkBFX,IAlBE,EAkBSC,KAlBT,EAkBuB;AAC5B,cAAIW,MAAM,CAACC,IAAP,CAAYZ,KAAK,CAACC,KAAlB,EAAyBY,MAA7B,EAAqC;AACnC;AACAb,YAAAA,KAAK,CAACc,IAAN,CAAWC,QAAX,GAAsB;AACpBC,cAAAA,OAAO,EAAE;AACPf,gBAAAA,KAAK,EAAED,KAAK,CAACC,KADN;AAEPG,gBAAAA,YAAY,EAAEJ,KAAK,CAACI,YAFb;AAGPD,gBAAAA,YAAY,EAAEH,KAAK,CAACG;AAHb;AADW,aAAtB;AAOD,WAV2B,CAY5B;;;AACAE,0BAAOC,UAAP;AACD;AAhCM;AADF;AADJ,GAAP;AAsCD,CAzCD","sourcesContent":["/* eslint-disable no-param-reassign */\n/* @flow */\n\nimport Module from './module';\nimport TaggedTemplateExpression from './visitors/TaggedTemplateExpression';\nimport type { StrictOptions, State } from './types';\n\nmodule.exports = function extract(babel: any, options: StrictOptions) {\n  const { types: t } = babel;\n\n  return {\n    visitor: {\n      Program: {\n        enter(path: any, state: State) {\n          // Collect all the style rules from the styles we encounter\n          state.rules = {};\n          state.index = -1;\n          state.dependencies = [];\n          state.replacements = [];\n\n          // Invalidate cache for module evaluation to get fresh modules\n          Module.invalidate();\n\n          // We need our transforms to run before anything else\n          // So we traverse here instead of a in a visitor\n          path.traverse({\n            TaggedTemplateExpression: p =>\n              TaggedTemplateExpression(p, state, t, options),\n          });\n        },\n        exit(path: any, state: State) {\n          if (Object.keys(state.rules).length) {\n            // Store the result as the file metadata\n            state.file.metadata = {\n              linaria: {\n                rules: state.rules,\n                replacements: state.replacements,\n                dependencies: state.dependencies,\n              },\n            };\n          }\n\n          // Invalidate cache for module evaluation when we're done\n          Module.invalidate();\n        },\n      },\n    },\n  };\n};\n"],"file":"extract.js"}