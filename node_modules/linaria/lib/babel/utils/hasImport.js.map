{"version":3,"sources":["../../../src/babel/utils/hasImport.js"],"names":["hasImport","t","scope","filename","identifier","source","binding","getAllBindings","p","path","resolveFromFile","id","M","require","_resolveFilename","paths","_nodeModulePaths","e","isImportingModule","value","resolve","isImportSpecifier","isImportDeclaration","parentPath","node","isVariableDeclarator","isCallExpression","init","isIdentifier","callee","name","arguments","length","isStringLiteral","isTemplateLiteral","quasis","cooked"],"mappings":";;;;;AAEA;;AAEA;AACe,SAASA,SAAT,CACbC,CADa,EAEbC,KAFa,EAGbC,QAHa,EAIbC,UAJa,EAKbC,MALa,EAMb;AACA,MAAMC,OAAO,GAAGJ,KAAK,CAACK,cAAN,GAAuBH,UAAvB,CAAhB;;AAEA,MAAI,CAACE,OAAL,EAAc;AACZ,WAAO,KAAP;AACD;;AAED,MAAME,CAAC,GAAGF,OAAO,CAACG,IAAlB;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,EAAE,EAAI;AAC5B;AACA,QAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,QAAI;AACF,aAAOD,CAAC,CAACE,gBAAF,CAAmBH,EAAnB,EAAuB;AAC5BA,QAAAA,EAAE,EAAER,QADwB;AAE5BA,QAAAA,QAAQ,EAARA,QAF4B;AAG5BY,QAAAA,KAAK,EAAEH,CAAC,CAACI,gBAAF,CAAmB,mBAAQb,QAAR,CAAnB;AAHqB,OAAvB,CAAP;AAKD,KAND,CAME,OAAOc,CAAP,EAAU;AACV,aAAO,IAAP;AACD;AACF,GAbD;;AAeA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;AAAA,WAC7B;AACAA,MAAAA,KAAK,KAAKd,MAAV,IACA;AACAK,MAAAA,eAAe,CAACS,KAAD,CAAf,OACE;AACCd,MAAAA,MAAM,KAAK,SAAX,GACGQ,OAAO,CAACO,OAAR,CAAgB,aAAhB,CADH,GAEGf,MAAM,KAAK,eAAX,GACAQ,OAAO,CAACO,OAAR,CAAgB,cAAhB,CADA,GAEAV,eAAe,CAACL,MAAD,CANrB;AAJ6B;AAAA,GAA/B;;AAYA,MAAIJ,CAAC,CAACoB,iBAAF,CAAoBb,CAApB,KAA0BP,CAAC,CAACqB,mBAAF,CAAsBd,CAAC,CAACe,UAAxB,CAA9B,EAAmE;AACjE,WAAOL,iBAAiB,CAACV,CAAC,CAACe,UAAF,CAAaC,IAAb,CAAkBnB,MAAlB,CAAyBc,KAA1B,CAAxB;AACD;;AAED,MAAIlB,CAAC,CAACwB,oBAAF,CAAuBjB,CAAvB,CAAJ,EAA+B;AAC7B,QACEP,CAAC,CAACyB,gBAAF,CAAmBlB,CAAC,CAACgB,IAAF,CAAOG,IAA1B,KACA1B,CAAC,CAAC2B,YAAF,CAAepB,CAAC,CAACgB,IAAF,CAAOG,IAAP,CAAYE,MAA3B,CADA,IAEArB,CAAC,CAACgB,IAAF,CAAOG,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,KAA4B,SAF5B,IAGAtB,CAAC,CAACgB,IAAF,CAAOG,IAAP,CAAYI,SAAZ,CAAsBC,MAAtB,KAAiC,CAJnC,EAKE;AACA,UAAMR,IAAI,GAAGhB,CAAC,CAACgB,IAAF,CAAOG,IAAP,CAAYI,SAAZ,CAAsB,CAAtB,CAAb;;AAEA,UAAI9B,CAAC,CAACgC,eAAF,CAAkBT,IAAlB,CAAJ,EAA6B;AAC3B,eAAON,iBAAiB,CAACM,IAAI,CAACL,KAAN,CAAxB;AACD;;AAED,UAAIlB,CAAC,CAACiC,iBAAF,CAAoBV,IAApB,KAA6BA,IAAI,CAACW,MAAL,CAAYH,MAAZ,KAAuB,CAAxD,EAA2D;AACzD,eAAOd,iBAAiB,CAACM,IAAI,CAACW,MAAL,CAAY,CAAZ,EAAehB,KAAf,CAAqBiB,MAAtB,CAAxB;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD","sourcesContent":["/* @flow */\n\nimport { dirname } from 'path';\n\n// Verify if the binding is imported from the specified source\nexport default function hasImport(\n  t: any,\n  scope: any,\n  filename: string,\n  identifier: string,\n  source: string\n) {\n  const binding = scope.getAllBindings()[identifier];\n\n  if (!binding) {\n    return false;\n  }\n\n  const p = binding.path;\n\n  const resolveFromFile = id => {\n    /* $FlowFixMe */\n    const M = require('module');\n\n    try {\n      return M._resolveFilename(id, {\n        id: filename,\n        filename,\n        paths: M._nodeModulePaths(dirname(filename)),\n      });\n    } catch (e) {\n      return null;\n    }\n  };\n\n  const isImportingModule = value =>\n    // If the value is an exact match, assume it imports the module\n    value === source ||\n    // Otherwise try to resolve both and check if they are the same file\n    resolveFromFile(value) ===\n      // eslint-disable-next-line no-nested-ternary\n      (source === 'linaria'\n        ? require.resolve('../../index')\n        : source === 'linaria/react'\n        ? require.resolve('../../react/')\n        : resolveFromFile(source));\n\n  if (t.isImportSpecifier(p) && t.isImportDeclaration(p.parentPath)) {\n    return isImportingModule(p.parentPath.node.source.value);\n  }\n\n  if (t.isVariableDeclarator(p)) {\n    if (\n      t.isCallExpression(p.node.init) &&\n      t.isIdentifier(p.node.init.callee) &&\n      p.node.init.callee.name === 'require' &&\n      p.node.init.arguments.length === 1\n    ) {\n      const node = p.node.init.arguments[0];\n\n      if (t.isStringLiteral(node)) {\n        return isImportingModule(node.value);\n      }\n\n      if (t.isTemplateLiteral(node) && node.quasis.length === 1) {\n        return isImportingModule(node.quasis[0].value.cooked);\n      }\n    }\n  }\n\n  return false;\n}\n"],"file":"hasImport.js"}