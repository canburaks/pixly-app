{"version":3,"sources":["../src/slugify.js"],"names":["doHash","str","seed","m","r","h","length","currentIndex","k","UInt32","Umul32","UInt16","charCodeAt","pos","n","nlo","nhi","res","slugify","code","toString","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable no-bitwise, default-case, no-param-reassign, prefer-destructuring */\n\n/**\n * murmurhash2 via https://gist.github.com/raycmorgan/588423\n * @flow\n */\n\nfunction doHash(str: string, seed: number = 0) {\n  const m = 0x5bd1e995;\n  const r = 24;\n  let h = seed ^ str.length;\n  let length = str.length;\n  let currentIndex = 0;\n\n  while (length >= 4) {\n    let k = UInt32(str, currentIndex);\n\n    k = Umul32(k, m);\n    k ^= k >>> r;\n    k = Umul32(k, m);\n\n    h = Umul32(h, m);\n    h ^= k;\n\n    currentIndex += 4;\n    length -= 4;\n  }\n\n  switch (length) {\n    case 3:\n      h ^= UInt16(str, currentIndex);\n      h ^= str.charCodeAt(currentIndex + 2) << 16;\n      h = Umul32(h, m);\n      break;\n\n    case 2:\n      h ^= UInt16(str, currentIndex);\n      h = Umul32(h, m);\n      break;\n\n    case 1:\n      h ^= str.charCodeAt(currentIndex);\n      h = Umul32(h, m);\n      break;\n  }\n\n  h ^= h >>> 13;\n  h = Umul32(h, m);\n  h ^= h >>> 15;\n\n  return h >>> 0;\n}\n\nfunction UInt32(str, pos) {\n  return (\n    str.charCodeAt(pos++) +\n    (str.charCodeAt(pos++) << 8) +\n    (str.charCodeAt(pos++) << 16) +\n    (str.charCodeAt(pos) << 24)\n  );\n}\n\nfunction UInt16(str, pos) {\n  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);\n}\n\nfunction Umul32(n, m) {\n  n |= 0;\n  m |= 0;\n  const nlo = n & 0xffff;\n  const nhi = n >>> 16;\n  const res = (nlo * m + (((nhi * m) & 0xffff) << 16)) | 0;\n  return res;\n}\n\nfunction slugify(code: string) {\n  return doHash(code).toString(36);\n}\n\nmodule.exports = slugify;\n"],"file":"slugify.js"}